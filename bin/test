#!/usr/bin/env ruby

require 'flapjack-diner'
require 'logger'

Flapjack::Diner.base_uri('http://127.0.0.1:4091/')
Flapjack::Diner.logger = Logger.new("logs/flapjack_diner.log")

test_rule = {"contact_id"=>"21", "entity_tags"=>["database", "physical"], "entities"=>["localhost"], "time_restrictions"=>[{"start_time"=>"2013-01-28 08:00:00", "end_time"=>"2013-01-28 18:00:00", "rrules"=>[{"validations"=>{"day"=>[1, 2, 3, 4, 5]}, "rule_type"=>"Weekly", "interval"=>1, "week_start"=>0}], "exrules"=>[], "rtimes"=>[], "extimes"=>[]}], "warning_media"=>["email"], "critical_media"=>["sms", "email"], "warning_blackhole"=>false, "critical_blackhole"=>false}

test_rule_json = '{
  "contact_id": "21",
  "entity_tags": [
    "database",
    "physical"
  ],
  "entities": [
    "localhost"
  ],
  "time_restrictions": [
    {
      "start_time": "2013-01-28 08:00:00",
      "end_time": "2013-01-28 18:00:00",
      "rrules": [
        {
          "validations": {
            "day": [1,2,3,4,5]
          },
          "rule_type": "Weekly",
          "interval": 1,
          "week_start": 0
        }
      ],
      "exrules": [],
      "rtimes": [],
      "extimes": []
    }
  ],
  "warning_media": [
    "email"
  ],
  "critical_media": [
    "sms",
    "email"
  ],
  "warning_blackhole": false,
  "critical_blackhole": false
}'
test_email = '{
  "address": "dmitri@example.com",
  "interval": 900
}'
puts "all contacts: " +
  Flapjack::Diner.contacts.inspect
puts "a contact: " +
  Flapjack::Diner.contact('21').inspect

puts "create a new notification rule: " +
  Flapjack::Diner.create_notification_rule!(test_rule).inspect
puts "a contact's notification rules: " +
  Flapjack::Diner.notification_rules('21').inspect

puts "notification_rules for a non-existant contact: " +
  Flapjack::Diner.notification_rules('5432').inspect
puts "last_error: " +
  Flapjack::Diner.last_error.inspect

rules = Flapjack::Diner.notification_rules('21')
raise "no rules for this contact" if rules.empty?
rule_id = rules.last['id']
puts "picking on rule with id: #{rule_id}"

puts "a notification rule: " +
  Flapjack::Diner.notification_rule(rule_id).inspect
puts "update a notification rule: " +
  Flapjack::Diner.update_notification_rule!(rule_id, test_rule).inspect
puts "delete a notification rule: " +
  Flapjack::Diner.delete_notification_rule!(rule_id).inspect
puts "a contact's notification rules: " +
  Flapjack::Diner.notification_rules('21').inspect

puts "a contact's media: "
  Flapjack::Diner.contact_media('21').inspect
puts "update a contact's email media: "
  Flapjack::Diner.update_contact_medium!('21', 'email', {:address => "dmitri@example.com", :interval => 900}).inspect
puts "a contact's email media: "
  Flapjack::Diner.contact_medium('21', 'email').inspect
puts "delete a contact's email media: "
  Flapjack::Diner.delete_contact_medium!('21', 'email').inspect

puts "set a contact's timezone: " +
  Flapjack::Diner.update_contact_timezone!('21', 'Australia/Adelaide').inspect
puts "a contact's timezone: " +
  Flapjack::Diner.contact_timezone('21').inspect
puts "delete a contact's timezone: " +
  Flapjack::Diner.delete_contact_timezone!('21').inspect

